name: "CloudNova Infra // CD"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - prod

      service:
        description: 'Service'
        required: true
        type: choice
        options:
          - networking
          - eks
          - eks-helm

jobs:
  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: '${{ inputs.service }}'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.1"
          terraform_wrapper: false

      - name: Configure git token
        run: git config --global url."https://${{ secrets.GH_TOKEN }}:@github.com/karol-olive/".insteadOf "https://github.com/karol-olive/"

      - name: Terraform Init
        id: init
        run: terraform init --backend-config=environment/${{ inputs.environment }}/backend.tfvars -upgrade

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -var-file=environment/${{ inputs.environment }}/terraform.tfvars -no-color -out=tfplan -detailed-exitcode || export exitcode=$?
          terraform show -no-color tfplan > plan.txt
          
          # Produce output according to exitcode: 0 (no changes) 1 (failed) 2 (changes)
          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          elif [ $exitcode -eq 2 ]; then
            echo "runapply=true" >> $GITHUB_OUTPUT
            exit 0
          else 
            echo "::notice::No changes encountered in plan file"
            exit 0
          fi
                
      - name: Terraform Apply
        if: steps.plan.outputs.runapply != ''
        id: apply
        run: terraform apply -auto-approve -input=false tfplan
      
  # terraform-apply:
  #   name: Terraform Apply
  #   runs-on: ubuntu-latest
  #   needs: terraform-plan
  #   environment: ${{ inputs.environment }}
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: '${{ inputs.service }}'

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-1

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v3
  #       with:
  #         terraform_version: "1.12.1"
          
  #     - name: Configure git token
  #       run: git config --global url."https://${{ secrets.GH_TOKEN }}:@github.com/karol-olive/".insteadOf "https://github.com/karol-olive/"

  #     - name: Terraform Init
  #       id: init
  #       run: terraform init --backend-config=environment/${{ inputs.environment }}/backend.tfvars -upgrade

  #     - name: Download Plan Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: tfplan-${{ inputs.service }}-${{ inputs.environment }}-${{ github.run_number }}
  #         path: ${{ github.workspace }}/${{ inputs.service }}


