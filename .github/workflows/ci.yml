name: "CloudNova Infra // CI"

on:
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  pull-requests: write
  contents: read

jobs:
  paths:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      full_paths: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      
      - name: Filter Paths
        uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3
        id: filter
        with:
          filters: .github/file-filters.yml

      - name: Check Changes
        if: steps.filter.outputs.changes == '[]'
        run: echo '::notice::No changes were detected in the tracked folders, skiping terraform CI job'

      - name: Set Paths to be Global
        if: steps.filter.outputs.changes != '[]'
        id: get-base-paths
        run: |
          echo ${{ steps.filter.outputs.changes }}
          paths=$(echo '${{ steps.filter.outputs.changes }}' | jq -r '.[]' | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo $paths
          echo "paths=$paths" >> $GITHUB_OUTPUT

  commitlint:
    needs: paths
    if: ${{ needs.paths.outputs.full_paths != '[]'}}
    strategy:
      matrix:
        path: ${{ fromJson(needs.paths.outputs.full_paths) }}
    defaults:
      run:
        shell: bash
        working-directory: '${{ matrix.path }}'
    name: "Commit Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: wagoid/commitlint-github-action@7f0a61df502599e1f1f50880aaa7ec1e2c0592f2 # v6

  checkov:
    name: "Checkov"
    needs: [commitlint, paths]
    if: ${{ needs.paths.outputs.full_paths != '[]'}}
    strategy:
      matrix:
        path: ${{ fromJson(needs.paths.outputs.full_paths) }}
    defaults:
      run:
        shell: bash
        working-directory: '${{ matrix.path }}'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
      checks: write

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Checkov
        uses: bridgecrewio/checkov-action@39af4356d060f18cc43712934dae91a79bb1590e # v12
        with:
          quiet: true
          directory: .
          output_format: cli
          output_file_path: console
          framework: terraform

  tflint-checks:
    name: "TF Lint"
    needs: [commitlint, paths]
    if: ${{ needs.paths.outputs.full_paths != '[]'}}
    strategy:
      matrix:
        path: ${{ fromJson(needs.paths.outputs.full_paths) }}
    defaults:
      run:
        shell: bash
        working-directory: '${{ matrix.path }}'
    runs-on: ubuntu-latest
    steps:

      # Checkout Repository
      - name: Check out Git Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      # TFLint - Terraform Check
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4
        name: Setup TFLint
        with:
          tflint_version: v0.52.0

      # Print TFLint version
      - name: Show version
        run: tflint --version

      # Install plugins
      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # Run tflint command in each directory recursively # use --force if you want to continue with workflow although errors are there
      - name: Run TFLint
        run: tflint -f compact --recursive

  terraform-validation:
    name: "Terraform Validation"
    runs-on: ubuntu-latest
    needs: [commitlint, paths]
    if: ${{ needs.paths.outputs.full_paths != '[]'}}
    strategy:
      matrix:
        path: ${{ fromJson(needs.paths.outputs.full_paths) }}
    defaults:
      run:
        shell: bash
        working-directory: '${{ matrix.path }}'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          terraform_version: "1.12.1"
          terraform_wrapper: false

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -recursive -check

      - name: Terraform Init
        id: init
        run: terraform init -backend=false

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
